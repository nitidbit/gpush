settings:
  # Run commands but do not git push
  dry_run: false

  paths:
    # Root directory to execute commands (relative to this file)
    root_dir: "./"
    # import a file with command definitions (for 'run_command' under parallel commands), can be a local file or a url
    import_path: "filename"

  # Notification settings for desktop alerts
  notification:
    enable_desktop_notification: true
    success_message: "All checks passed successfully!"
    failure_message: "Checks failed, please review the issues."

commands:
  # array of shell commands as strings, eg download config files for eslint, prettier, etc.
  pre_run:
    - "shell command one"
    - run_command: 'foo'
  
  parallel_run:
    # Inherit command settings from a predefined command 'uncommitted_git_changes'
    - run_command: "uncommitted_git_changes"

    # Run predefined command 'jest' tests with additional options
    - run_command: "jest"
      # Environment variables for this command
      env:
        NODE_ENV: "test"
      option:
        - 'coverage'
        - watchAll: false

    # Define an command without inheriting from a predefined command
    - name: "rspec"
      # Command arguments to run 'rspec'
      shell: "bundle exec rspec $(gpush find-rspec-files --include 'spec/*.rb')"
    
    # Define a custom script command with a description and arguments
    - name: "custom_script"
      description: "User defined custom script"
      shell: "./scripts/my_custom_script.sh"

  # shell commands (could be a .sh script) to be run after the commands complete
  post_run:
    always_run:
      - "shell command one"
      - run_command: 'foo'
    always_skip:
    on_success:
    on_failure:
    

# ======== low priority additional options =========

# Whether to save command output to a file
save_output: true

# Limit the number of concurrent commands
concurrency_limit: 5
